name: CI/CD for Booklist Manager

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Upload coverage report
        uses: actions/upload-artifact@v3.1.3
        with:
          name: coverage-report
          path: coverage/

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Navigate to the application directory
            echo "Navigating to the app directory..."
            cd booklist-manager || { echo "Directory not found"; exit 1; }

            # Pull the latest changes from the main branch
            echo "Pulling the latest changes from main..."
            git pull origin main || { echo "Git pull failed"; exit 1; }

            # Install dependencies
            echo "Installing dependencies..."
            npm install || { echo "npm install failed"; exit 1; }

            # Restart the application if already running or start it
            echo "Restarting or starting the application..."
            pm2 restart all || pm2 start server.js --name booklist-api

            # Monitor application logs
            echo "Monitoring application logs..."
            tail -n 100 /var/log/syslog || tail -n 100 /var/log/messages # Update based on actual log location

            # Run a health check to ensure the app is up
            echo "Running health check..."
            curl --silent --show-error http://localhost:5000/health || { echo "Health check failed"; exit 1; }

            echo "Application deployed and healthy!"

  logging:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Install logging utilities
        run: sudo apt-get install -y jq

      - name: Generate and analyze logs
        run: |
          echo "Starting application logs..."
          echo "$(date) - Deployment successful" >> app.log
          tail -n 10 app.log # Display the last 10 lines of the log for analysis

      - name: Push logs to a remote log management service (optional)
        run: |
          echo "Pushing logs to remote service..."
          curl -X POST -d @app.log https://log-management-service.com/api/logs || { echo "Failed to push logs"; exit 1; }
          echo "Logs pushed to remote service" # Replace with actual service API
